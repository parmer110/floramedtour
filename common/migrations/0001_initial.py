# Generated by Django 4.2.3 on 2023-08-16 15:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='About Me')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='Classifications Name')),
                ('model', models.CharField(blank=True, max_length=40, null=True, verbose_name='Model Name')),
                ('type', models.CharField(max_length=100, verbose_name='Type of Classification')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DateSlot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('document', models.FileField(upload_to='documents/pdf', verbose_name='Document')),
                ('image', models.FileField(upload_to='documents/img', verbose_name='Picture')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('classification', models.ManyToManyField(related_name='common_document', to='common.classification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام شغل')),
                ('description', models.TextField(verbose_name='توضیحات')),
            ],
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Longitude')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Latitude')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('_firstname', models.TextField(db_column='firstname', null=True, verbose_name='First Name')),
                ('_lastname', models.TextField(db_column='lastname', null=True, verbose_name='Last Name')),
                ('_date_of_birth', models.CharField(db_column='birthdate', max_length=526, null=True, verbose_name='Birthdate')),
                ('_national_code', models.TextField(db_column='national_code', null=True, verbose_name='National Code')),
                ('_ssn', models.IntegerField(null=True)),
                ('_passport_number', models.TextField(db_column='passport_number', null=True, verbose_name='Passport Number')),
                ('_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], db_column='gender', max_length=496, null=True, verbose_name='Gender')),
                ('_mobile_phone', models.TextField(db_column='mobile_phone', null=True, verbose_name='Mobile Phone')),
                ('_email', models.TextField(db_column='email', null=True, verbose_name='Email')),
                ('_website', models.URLField(blank=True, null=True, verbose_name='آدرس وبسایت')),
                ('_nationality', models.TextField(db_column='nationality', null=True, verbose_name='Nationality')),
                ('_profile_picture', models.TextField(blank=True, db_column='profile_picture', null=True, verbose_name='Profile Picture')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('classification', models.ManyToManyField(related_name='schedule', to='common.classification')),
                ('dates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.dateslot', verbose_name='Dates')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Translate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('persian', models.TextField(blank=True, null=True)),
                ('english', models.TextField(blank=True, null=True)),
                ('arabic', models.TextField(blank=True, null=True)),
                ('russian', models.TextField(blank=True, null=True)),
                ('chineseTraditional', models.TextField(blank=True, null=True)),
                ('spanish', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('session_key', models.CharField(max_length=40, unique=True, verbose_name='Session Key')),
                ('session_data', models.TextField(verbose_name='Session Data')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='Login Time')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Logout Time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteManagementsLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('_ip4', models.CharField(db_column='ip4', max_length=558, null=True, verbose_name='IP4')),
                ('_ip6', models.CharField(db_column='ip6', max_length=990, null=True, verbose_name='IP6')),
                ('_link', models.TextField(db_column='link', null=True, verbose_name='Link')),
                ('_action', models.TextField(db_column='action', null=True, verbose_name='Action')),
                ('person', models.ForeignKey(db_column='person', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SiteManagementsLog', to='common.person', verbose_name='Person')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_management', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchedulePlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('airline_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('hotel_reservation', models.CharField(blank=True, max_length=100, null=True)),
                ('other_details', models.TextField(blank=True, null=True)),
                ('model_documentation', models.ManyToManyField(related_name='common_schedule_plan', to='common.document')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_plan', to='common.schedule')),
                ('traveler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='schedule',
            name='times',
            field=models.ManyToManyField(to='common.timeslot', verbose_name='Times'),
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام نقش')),
                ('description', models.TextField(verbose_name='توضیحات')),
                ('Jobs', models.ManyToManyField(blank=True, to='common.jobs')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=100)),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField()),
                ('classification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='common_rating', to='common.classification')),
                ('rater_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rating', to='common.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('text', models.TextField()),
                ('is_required', models.BooleanField(default=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.survey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('_title', models.CharField(db_column='title', max_length=1166, null=True, verbose_name='Title')),
                ('_country', models.CharField(db_column='country', max_length=686, null=True, verbose_name='Country')),
                ('_statee', models.CharField(db_column='state', max_length=686, null=True, verbose_name='State')),
                ('_city', models.CharField(db_column='city', max_length=686, null=True, verbose_name='City')),
                ('_address', models.CharField(db_column='address', max_length=1966, null=True, verbose_name='Address')),
                ('_postalcode', models.CharField(db_column='postalcode', max_length=606, null=True, verbose_name='Postalcode')),
                ('_phoneNumber', models.CharField(db_column='phone_number', max_length=606, null=True, verbose_name='Phone Number')),
                ('website', models.URLField(blank=True, null=True, verbose_name='آدرس وبسایت')),
                ('_usage', models.TextField(db_column='usage', null=True, verbose_name='Usage')),
                ('_area', models.CharField(blank=True, db_column='area', max_length=542, null=True, verbose_name='Area')),
                ('_num_floors', models.CharField(blank=True, db_column='num_floors', max_length=414, null=True, verbose_name='Number Floors')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='place', to='common.location', verbose_name='Location')),
                ('manager', models.ForeignKey(blank=True, db_column='manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_place', to='common.person', verbose_name='Manager')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonPlace',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('_priority', models.CharField(db_column='priority', max_length=414, null=True, verbose_name='Priority')),
                ('_role', models.CharField(db_column='role', max_length=686, null=True, verbose_name='Role and Position')),
                ('_responsibility', models.TextField(db_column='responsibility', null=True, verbose_name='Responsibility')),
                ('website', models.URLField(blank=True, null=True, verbose_name='آدرس وبسایت')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_place', to='common.person')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_person', to='common.places')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='address',
            field=models.ManyToManyField(blank=True, related_name='place_manager', through='common.PersonPlace', to='common.places'),
        ),
        migrations.AddField(
            model_name='person',
            name='jobs',
            field=models.ManyToManyField(to='common.jobs', verbose_name='شغل\u200cها'),
        ),
        migrations.AddField(
            model_name='person',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LoginRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('ipv4_address', models.GenericIPAddressField(protocol='IPv4', verbose_name='IPv4 Address')),
                ('ipv6_address', models.GenericIPAddressField(protocol='IPv6', verbose_name='IPv6 Address')),
                ('login_date_time', models.DateTimeField(verbose_name='Login Date and Time')),
                ('operating_system', models.CharField(max_length=100, verbose_name='Operating System')),
                ('browser', models.CharField(max_length=100, verbose_name='Browser')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegalEntityPlaces',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('order', models.PositiveSmallIntegerField()),
                ('usage', models.CharField(max_length=128, null=True)),
                ('descrition', models.TextField()),
                ('legalentity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='through', to='common.legalentity')),
                ('places', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='throught', to='common.places')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='legalentity',
            name='address',
            field=models.ManyToManyField(related_name='legal_entity', through='common.LegalEntityPlaces', to='common.places'),
        ),
        migrations.AddField(
            model_name='legalentity',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logal_entity', to='common.classification'),
        ),
        migrations.AddField(
            model_name='jobs',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.roles', verbose_name='نقش مرتبط'),
        ),
        migrations.CreateModel(
            name='GroupsUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('_name', models.CharField(db_column='name', max_length=1006, verbose_name='Group Name')),
                ('_description', models.TextField(blank=True, null=True)),
                ('role', models.ManyToManyField(limit_choices_to={'name': 'GroupUser'}, related_name='group_user', to='common.classification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('response', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.question')),
                ('respondent_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='common.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.groupsuser'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
