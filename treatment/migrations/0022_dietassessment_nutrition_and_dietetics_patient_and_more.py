# Generated by Django 4.2.3 on 2023-08-26 17:08

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0021_remove_user_group_delete_groupsuser'),
        ('treatment', '0021_plasticsurgerypatient_plasticsurgeryprocedure_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DietAssessment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام ارزیابی رژیم غذایی')),
                ('assessment_date', models.DateTimeField(verbose_name='تاریخ ارزیابی')),
                ('dietary_habits', models.TextField(verbose_name='عادات غذایی')),
                ('health_status', models.TextField(verbose_name='وضعیت سلامت')),
                ('goals', models.TextField(verbose_name='اهداف تغذیه')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='nutrition_and_dietetics_Patient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='nutrition_and_dietetics_Patient', to='common.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NutritionalEducation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=100, verbose_name='عنوان آموزش')),
                ('content', models.TextField(verbose_name='محتوای آموزش')),
                ('publication_date', models.DateField(verbose_name='تاریخ انتشار')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NutritionalSupplement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام مکمل تغذیه')),
                ('description', models.TextField(verbose_name='توضیحات مکمل تغذیه')),
                ('benefits', models.TextField(verbose_name='مزایا و فواید')),
                ('usage_instructions', models.TextField(verbose_name='دستورالعمل مصرف')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='sellrepresentation',
            name='specialties',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Adult Cardiovascular Surgery', 'Adult Cardiovascular Surgery'), ('Adult Endocrinology', 'Adult Endocrinology'), ('Adult Gastroenterology', 'Adult Gastroenterology'), ('Adult General Surgery', 'Adult General Surgery'), ('Adult Hematology', 'Adult Hematology'), ('Adult Infectious Disease', 'Adult Infectious Disease'), ('Adult Nephrology', 'Adult Nephrology'), ('Adult Neurosurgery', 'Adult Neurosurgery'), ('Adult Oncology', 'Adult Oncology'), ('Adult Orthopedics', 'Adult Orthopedics'), ('Adult Otolaryngology', 'Adult Otolaryngology'), ('Adult Plastic Surgery', 'Adult Plastic Surgery'), ('Adult Pulmonology', 'Adult Pulmonology'), ('Adult Rheumatology', 'Adult Rheumatology'), ('Allergy and Immunology', 'Allergy and Immunology'), ('Anesthesiology', 'Anesthesiology'), ('Behavioral Therapy Specialist', 'Behavioral Therapy Specialist'), ('Body Contouring Surgery', 'Body Contouring Surgery'), ('Breast Body Contouring Surgery', 'Breast Body Contouring Surgery'), ('Breast Cosmetic Surgery', 'Breast Cosmetic Surgery'), ('Breast Craniofacial Surgery', 'Breast Craniofacial Surgery'), ('Breast Reconstruction Surgery', 'Breast Reconstruction Surgery'), ('Breast Surgery', 'Breast Surgery'), ('Breathing Exercise Specialist', 'Breathing Exercise Specialist'), ('Burn Surgery', 'Burn Surgery'), ('Colorectal Surgery', 'Colorectal Surgery'), ('Cosmetic Plastic Surgery', 'Cosmetic Plastic Surgery'), ('Craniofacial Surgery', 'Craniofacial Surgery'), ('Dental Hygiene Specialist', 'Dental Hygiene Specialist'), ('Dermatologic Surgery', 'Dermatologic Surgery'), ('Dermatology', 'Dermatology'), ('Diagnostic Radiology', 'Diagnostic Radiology'), ('Emergency Medicine', 'Emergency Medicine'), ('Facial Plastic Surgery', 'Facial Plastic Surgery'), ('Family Medicine', 'Family Medicine'), ('Fitness Trainer', 'Fitness Trainer'), ('Hand Nerve Surgery', 'Hand Nerve Surgery'), ('Hand Plastic Surgery', 'Hand Plastic Surgery'), ('Hand Surgery', 'Hand Surgery'), ('Head and Neck Surgery', 'Head and Neck Surgery'), ('Healthcare Social Worker', 'Healthcare Social Worker'), ('Health Psychology Specialist', 'Health Psychology Specialist'), ('Internal Medicine', 'Internal Medicine'), ('Lower Extremity Plastic Surgery', 'Lower Extremity Plastic Surgery'), ('Massage Therapist', 'Massage Therapist'), ('Medical Genetics', 'Medical Genetics'), ('Neurological Plastic Surgery', 'Neurological Plastic Surgery'), ('Neurology', 'Neurology'), ('Nuclear Medicine', 'Nuclear Medicine'), ('Nutrition and Dietetics', 'Nutrition and Dietetics'), ('Nutrition Consultant', 'Nutrition Consultant'), ('Obstetrics and Gynecology', 'Obstetrics and Gynecology'), ('Oncologic Plastic Surgery', 'Oncologic Plastic Surgery'), ('Ophthalmology', 'Ophthalmology'), ('Pathology', 'Pathology'), ('Pediatrics', 'Pediatrics'), ('Pediatric Cardiovascular Surgery', 'Pediatric Cardiovascular Surgery'), ('Pediatric Endocrinology', 'Pediatric Endocrinology'), ('Pediatric Gastroenterology', 'Pediatric Gastroenterology'), ('Pediatric General Surgery', 'Pediatric General Surgery'), ('Pediatric Hematology', 'Pediatric Hematology'), ('Pediatric Infectious Disease', 'Pediatric Infectious Disease'), ('Pediatric Nephrology', 'Pediatric Nephrology'), ('Pediatric Neurosurgery', 'Pediatric Neurosurgery'), ('Pediatric Oncology', 'Pediatric Oncology'), ('Pediatric Orthopedics', 'Pediatric Orthopedics'), ('Pediatric Otolaryngology', 'Pediatric Otolaryngology'), ('Pediatric Plastic Surgery', 'Pediatric Plastic Surgery'), ('Pediatric Pulmonology', 'Pediatric Pulmonology'), ('Pediatric Rheumatology', 'Pediatric Rheumatology'), ('Physical Medicine and Rehabilitation', 'Physical Medicine and Rehabilitation'), ('Plastic Surgery', 'Plastic Surgery'), ('Preventive Medicine', 'Preventive Medicine'), ('Psychiatry', 'Psychiatry'), ('Radiation Oncology', 'Radiation Oncology'), ('Reconstructive Plastic Surgery', 'Reconstructive Plastic Surgery'), ('Respiratory Plastic Surgery', 'Respiratory Plastic Surgery'), ('Surgery', 'Surgery'), ('Thoracic Surgery', 'Thoracic Surgery'), ('Upper Extremity Plastic Surgery', 'Upper Extremity Plastic Surgery'), ('Urogenital Plastic Surgery', 'Urogenital Plastic Surgery'), ('Urology', 'Urology'), ('Vascular Surgery', 'Vascular Surgery'), ('Yoga and Mindfulness Specialist', 'Yoga and Mindfulness Specialist')], max_length=60, null=True), size=None),
        ),
        migrations.AlterField(
            model_name='specialty',
            name='name',
            field=models.CharField(choices=[('Adult Cardiovascular Surgery', 'Adult Cardiovascular Surgery'), ('Adult Endocrinology', 'Adult Endocrinology'), ('Adult Gastroenterology', 'Adult Gastroenterology'), ('Adult General Surgery', 'Adult General Surgery'), ('Adult Hematology', 'Adult Hematology'), ('Adult Infectious Disease', 'Adult Infectious Disease'), ('Adult Nephrology', 'Adult Nephrology'), ('Adult Neurosurgery', 'Adult Neurosurgery'), ('Adult Oncology', 'Adult Oncology'), ('Adult Orthopedics', 'Adult Orthopedics'), ('Adult Otolaryngology', 'Adult Otolaryngology'), ('Adult Plastic Surgery', 'Adult Plastic Surgery'), ('Adult Pulmonology', 'Adult Pulmonology'), ('Adult Rheumatology', 'Adult Rheumatology'), ('Allergy and Immunology', 'Allergy and Immunology'), ('Anesthesiology', 'Anesthesiology'), ('Behavioral Therapy Specialist', 'Behavioral Therapy Specialist'), ('Body Contouring Surgery', 'Body Contouring Surgery'), ('Breast Body Contouring Surgery', 'Breast Body Contouring Surgery'), ('Breast Cosmetic Surgery', 'Breast Cosmetic Surgery'), ('Breast Craniofacial Surgery', 'Breast Craniofacial Surgery'), ('Breast Reconstruction Surgery', 'Breast Reconstruction Surgery'), ('Breast Surgery', 'Breast Surgery'), ('Breathing Exercise Specialist', 'Breathing Exercise Specialist'), ('Burn Surgery', 'Burn Surgery'), ('Colorectal Surgery', 'Colorectal Surgery'), ('Cosmetic Plastic Surgery', 'Cosmetic Plastic Surgery'), ('Craniofacial Surgery', 'Craniofacial Surgery'), ('Dental Hygiene Specialist', 'Dental Hygiene Specialist'), ('Dermatologic Surgery', 'Dermatologic Surgery'), ('Dermatology', 'Dermatology'), ('Diagnostic Radiology', 'Diagnostic Radiology'), ('Emergency Medicine', 'Emergency Medicine'), ('Facial Plastic Surgery', 'Facial Plastic Surgery'), ('Family Medicine', 'Family Medicine'), ('Fitness Trainer', 'Fitness Trainer'), ('Hand Nerve Surgery', 'Hand Nerve Surgery'), ('Hand Plastic Surgery', 'Hand Plastic Surgery'), ('Hand Surgery', 'Hand Surgery'), ('Head and Neck Surgery', 'Head and Neck Surgery'), ('Healthcare Social Worker', 'Healthcare Social Worker'), ('Health Psychology Specialist', 'Health Psychology Specialist'), ('Internal Medicine', 'Internal Medicine'), ('Lower Extremity Plastic Surgery', 'Lower Extremity Plastic Surgery'), ('Massage Therapist', 'Massage Therapist'), ('Medical Genetics', 'Medical Genetics'), ('Neurological Plastic Surgery', 'Neurological Plastic Surgery'), ('Neurology', 'Neurology'), ('Nuclear Medicine', 'Nuclear Medicine'), ('Nutrition and Dietetics', 'Nutrition and Dietetics'), ('Nutrition Consultant', 'Nutrition Consultant'), ('Obstetrics and Gynecology', 'Obstetrics and Gynecology'), ('Oncologic Plastic Surgery', 'Oncologic Plastic Surgery'), ('Ophthalmology', 'Ophthalmology'), ('Pathology', 'Pathology'), ('Pediatrics', 'Pediatrics'), ('Pediatric Cardiovascular Surgery', 'Pediatric Cardiovascular Surgery'), ('Pediatric Endocrinology', 'Pediatric Endocrinology'), ('Pediatric Gastroenterology', 'Pediatric Gastroenterology'), ('Pediatric General Surgery', 'Pediatric General Surgery'), ('Pediatric Hematology', 'Pediatric Hematology'), ('Pediatric Infectious Disease', 'Pediatric Infectious Disease'), ('Pediatric Nephrology', 'Pediatric Nephrology'), ('Pediatric Neurosurgery', 'Pediatric Neurosurgery'), ('Pediatric Oncology', 'Pediatric Oncology'), ('Pediatric Orthopedics', 'Pediatric Orthopedics'), ('Pediatric Otolaryngology', 'Pediatric Otolaryngology'), ('Pediatric Plastic Surgery', 'Pediatric Plastic Surgery'), ('Pediatric Pulmonology', 'Pediatric Pulmonology'), ('Pediatric Rheumatology', 'Pediatric Rheumatology'), ('Physical Medicine and Rehabilitation', 'Physical Medicine and Rehabilitation'), ('Plastic Surgery', 'Plastic Surgery'), ('Preventive Medicine', 'Preventive Medicine'), ('Psychiatry', 'Psychiatry'), ('Radiation Oncology', 'Radiation Oncology'), ('Reconstructive Plastic Surgery', 'Reconstructive Plastic Surgery'), ('Respiratory Plastic Surgery', 'Respiratory Plastic Surgery'), ('Surgery', 'Surgery'), ('Thoracic Surgery', 'Thoracic Surgery'), ('Upper Extremity Plastic Surgery', 'Upper Extremity Plastic Surgery'), ('Urogenital Plastic Surgery', 'Urogenital Plastic Surgery'), ('Urology', 'Urology'), ('Vascular Surgery', 'Vascular Surgery'), ('Yoga and Mindfulness Specialist', 'Yoga and Mindfulness Specialist')], max_length=100, unique=True),
        ),
        migrations.CreateModel(
            name='OralHealthAssessment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام ارزیابی بهداشت دهان')),
                ('assessment_date', models.DateTimeField(verbose_name='تاریخ ارزیابی')),
                ('dental_history', models.TextField(verbose_name='سوابق دهانی')),
                ('oral_health_status', models.TextField(verbose_name='وضعیت بهداشت دهان')),
                ('recommendations', models.TextField(verbose_name='توصیه\u200cهای بهداشتی')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.dentalhygienepatient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NutritionPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام برنامه تغذیه')),
                ('description', models.TextField(verbose_name='توضیحات برنامه تغذیه')),
                ('recommendations', models.TextField()),
                ('meal_schedule', models.TextField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.nutrition_and_dietetics_patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NutritionalRecommendation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام توصیه تغذیه')),
                ('content', models.TextField(verbose_name='محتوای توصیه تغذیه')),
                ('diet_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.dietassessment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='nutrition_and_dietetics_Treatment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('visit_date', models.DateTimeField(verbose_name='تاریخ ویزیت')),
                ('follow_up', models.TextField(verbose_name='پیگیری بعدی')),
                ('progress_notes', models.TextField(verbose_name='یادداشت\u200cهای پیشرفت')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.dietassessment', verbose_name='ارزیابی رژیم غذایی')),
                ('nutrition_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.nutritionplan', verbose_name='برنامه تغذیه')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.nutrition_and_dietetics_patient', verbose_name='بیمار')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='dietassessment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.nutrition_and_dietetics_patient'),
        ),
        migrations.CreateModel(
            name='DentalXRay',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام دندان\u200cپزشکی ایکس-ری')),
                ('xray_date', models.DateTimeField(verbose_name='تاریخ ایکس-ری')),
                ('description', models.TextField(verbose_name='توضیحات ایکس-ری')),
                ('findings', models.TextField(verbose_name='یافته\u200cهای ایکس-ری')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.dentalhygienepatient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DentalTreatmentPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام برنامه درمان دندان\u200cپزشکی')),
                ('plan_date', models.DateTimeField(verbose_name='تاریخ برنامه درمان')),
                ('dental_issues', models.TextField(verbose_name='مشکلات دندان\u200cپزشکی')),
                ('treatment_steps', models.TextField(verbose_name='مراحل درمان')),
                ('medications', models.TextField(verbose_name='داروها')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.dentalhygienepatient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DentalCleaning',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام تمیزکاری دندان')),
                ('cleaning_date', models.DateTimeField(verbose_name='تاریخ تمیزکاری')),
                ('dental_professional', models.CharField(max_length=100, verbose_name='پروفشنال بهداشت دهان')),
                ('cleaning_procedures', models.TextField(verbose_name='روش\u200cهای تمیزکاری')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.dentalhygienepatient')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
