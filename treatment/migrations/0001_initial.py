# Generated by Django 4.2.5 on 2024-01-04 18:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administration', '__first__'),
        ('common', '0001_initial'),
        ('nursing', '__first__'),
        ('financialhub', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppBookingChannel',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('app_booking_channel_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'App Booking Channel',
                'verbose_name_plural': 'App Booking Channels',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('appointment_date', models.DateTimeField(null=True)),
                ('visit_details', models.TextField(blank=True, null=True)),
                ('is_surgery', models.BooleanField(default=False)),
                ('surgery_details', models.TextField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_frequency', models.PositiveIntegerField(default=0, help_text='Frequency of recurring appointments in days (0 for non-recurring)')),
                ('actual_end_time', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment_actual_end_time', to='common.schedule')),
                ('app_booking_channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment', to='treatment.appbookingchannel')),
                ('appointmen_documentation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_appointment', to='common.document')),
                ('appointment_schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment', to='common.schedule')),
            ],
            options={
                'ordering': ['-appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentStatus',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('status', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Appointment Status',
                'verbose_name_plural': 'Appointment Statuses',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100)),
                ('blockfloor', models.IntegerField()),
                ('blockcode', models.IntegerField()),
                ('capacity', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalCenter',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='نام مرکز درمانی')),
                ('website', models.URLField(blank=True, null=True, verbose_name='آدرس وبسایت')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='ایمیل مرکز درمانی')),
                ('rating', models.FloatField(default=0, verbose_name='امتیاز مرکز درمانی')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_center', to='common.places', verbose_name='نام مرکز درمانی')),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.classification', verbose_name='طبقه\u200cبندی')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_medical_center', to='common.location')),
            ],
            options={
                'verbose_name': 'مرکز درمانی',
                'verbose_name_plural': 'مراکز درمانی',
            },
        ),
        migrations.CreateModel(
            name='MedicalCenterUnit',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='Unit Name')),
                ('description', models.TextField(verbose_name='Desctiption')),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.classification', verbose_name='طبقه\u200cبندی')),
                ('cost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_medical_center_unit', to='financialhub.cost', verbose_name='هزینه (در واحد پولی)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalCenterUnitMedicalCenter',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('number_of_rooms', models.PositiveIntegerField(verbose_name='Number of Rooms')),
                ('number_of_beds', models.PositiveIntegerField(verbose_name='Number of Beds')),
                ('rating', models.IntegerField(default=0, verbose_name='Rating')),
                ('classification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_center_unit_medical_center', to='common.classification')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_center_unit_medical_center', to='common.location')),
                ('medical_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalcenter')),
                ('medical_center_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalcenterunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalPlan',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('time_slot_per_client_in_min', models.IntegerField()),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_office', to='common.places')),
                ('first_consultation_fee', models.ManyToManyField(blank=True, related_name='office_first_consultation_fee', to='financialhub.cost')),
                ('followup_consultation_fee', models.ManyToManyField(blank=True, related_name='office_followup_consultation_fee', to='financialhub.cost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('insuranceid', models.IntegerField()),
                ('pcp', models.IntegerField()),
                ('customer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.customer')),
            ],
            options={
                'db_table': 'treatment_Patient',
            },
        ),
        migrations.CreateModel(
            name='Physician',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('license_number', models.CharField(max_length=20, unique=True)),
                ('graduation_date', models.DateField()),
                ('cost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_physician', to='financialhub.cost', verbose_name='هزینه (در واحد پولی)')),
                ('documentation', models.ManyToManyField(blank=True, related_name='physician', to='common.document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('roomnumber', models.IntegerField(unique=True)),
                ('blockfloor', models.IntegerField()),
                ('blockcode', models.IntegerField()),
                ('unavailable', models.BooleanField()),
                ('block', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='room', to='treatment.block')),
                ('medical_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='room', to='treatment.medicalcenter')),
                ('medical_center_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='room', to='treatment.medicalcenterunit')),
                ('roomtype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_center_room', to='common.classification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbreviation', models.CharField(max_length=50, verbose_name='مخفف تخصص')),
                ('description', models.TextField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.educationaldegree', verbose_name='مدرک تخصص')),
            ],
            options={
                'verbose_name': 'Specialty',
                'verbose_name_plural': 'Specialties',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_available', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Treatment',
                'verbose_name_plural': 'Treatments',
            },
        ),
        migrations.CreateModel(
            name='treatment_package_medical_center',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('medical_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalcenter')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TreatmentPackage',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(null=True)),
                ('treatment_duration', models.DurationField(null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('classification', models.ManyToManyField(blank=True, related_name='treatment_package', to='common.classification')),
                ('cost', models.ManyToManyField(related_name='treatment_treatment_package', to='financialhub.cost')),
                ('medical_center', models.ManyToManyField(blank=True, related_name='treatment_package', through='treatment.treatment_package_medical_center', to='treatment.medicalcenter')),
                ('model_documentation', models.ManyToManyField(blank=True, related_name='treatment_package', to='common.document')),
                ('physicians', models.ManyToManyField(related_name='treatment_package', to='treatment.physician')),
                ('specialties', models.ManyToManyField(to='treatment.specialty')),
            ],
            options={
                'verbose_name': 'Treatment',
                'verbose_name_plural': 'Treatments',
            },
        ),
        migrations.CreateModel(
            name='TreatmentCost',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('cost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treatment_treatmentcost', to='financialhub.cost')),
                ('treatment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treatment_cost', to='treatment.treatment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='treatment_package_medical_center',
            name='treatment_package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.treatmentpackage'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='cost',
            field=models.ManyToManyField(related_name='treatment_treatment', through='treatment.TreatmentCost', to='financialhub.cost'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='duration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_treatment', to='common.schedule'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='medical_plan',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treatment', to='treatment.medicalplan'),
        ),
        migrations.CreateModel(
            name='Translator',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('languages', models.CharField(max_length=200)),
                ('history', models.TextField(null=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment_translator', to='common.classification')),
                ('cost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='translator', to='financialhub.cost')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_translator', to='common.person')),
                ('rating', models.ManyToManyField(blank=True, related_name='treatment_translator', to='common.rating')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrainedIn',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('certificationdate', models.DateField()),
                ('certificationexpires', models.DateField()),
                ('documents', models.ManyToManyField(blank=True, related_name='trained_in_document', to='common.document')),
                ('medical_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trainedIn', to='treatment.medicalcenter')),
                ('physician', models.ManyToManyField(related_name='trained_in_physician', to='treatment.physician')),
                ('specialty', models.ManyToManyField(related_name='trained_in_specialty', to='treatment.specialty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SurgerySimulator',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('manufacturer', models.CharField(max_length=100)),
                ('medical_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surgery_simulator', to='treatment.medicalcenter')),
                ('physician', models.ManyToManyField(related_name='surgery_simulator', to='treatment.physician')),
                ('specification', models.ManyToManyField(related_name='surgery_simulator', to='treatment.specialty')),
            ],
            options={
                'verbose_name': 'Surgery Simulator',
                'verbose_name_plural': 'Surgery Simulators',
            },
        ),
        migrations.CreateModel(
            name='SubSpecialty',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='نام فوق\u200cتخصص')),
                ('abbreviation', models.CharField(max_length=20, verbose_name='مخفف فوق\u200cتخصص')),
                ('description', models.TextField(verbose_name='توضیحات')),
                ('is_active', models.BooleanField(default=True)),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.educationaldegree', verbose_name='مدرک فوق\u200cتخصص')),
                ('parent_specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_specialties', to='treatment.specialty', verbose_name='تخصص مادر')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stay',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('stayid', models.IntegerField(unique=True)),
                ('admit_date', models.DateTimeField()),
                ('discharge_date', models.DateTimeField()),
                ('block', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stay', to='treatment.block')),
                ('medical_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stay', to='treatment.medicalcenter')),
                ('medical_center_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stay', to='treatment.medicalcenterunit')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medical_center_stay', to='treatment.patient')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.room')),
                ('schedule', models.ManyToManyField(related_name='treatment_stay', to='common.schedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceAppointment',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.appointment')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SellRepresentation',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('organization_value', models.PositiveIntegerField(default=0, verbose_name='ارزش سازمانی')),
                ('professional_fields', models.TextField(null=True, verbose_name='حوزه\u200cهای حرفه\u200cای')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='خلاصه اطلاعات')),
                ('credentials', models.ManyToManyField(blank=True, related_name='sell_representation_credentials', to='common.document')),
                ('evidence', models.ManyToManyField(blank=True, related_name='sell_representation_evidence', to='common.document')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_representation', to='common.person')),
                ('specialties', models.ManyToManyField(related_name='sell_representation', to='treatment.specialty')),
            ],
            options={
                'verbose_name': 'نماینده\u200cی فروش',
                'verbose_name_plural': 'نمایندگان فروش',
            },
        ),
        migrations.CreateModel(
            name='SalesFeedback',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('rating', models.PositiveIntegerField()),
                ('rank', models.PositiveIntegerField(default=0, verbose_name='رتبه')),
                ('feedback_text', models.TextField()),
                ('sell_representation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.sellrepresentation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesCommission',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('commission_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('amount_earned', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sell_representation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.sellrepresentation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('qualification_name', models.CharField(max_length=200)),
                ('institute_name', models.CharField(blank=True, max_length=200, null=True)),
                ('university', models.CharField(blank=True, max_length=100, null=True)),
                ('procurement_year', models.DateField()),
                ('certification_date', models.DateField(null=True)),
                ('certification_expires', models.DateField(null=True)),
                ('document', models.ManyToManyField(related_name='common_qualification', to='common.document')),
                ('evidence', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.document')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='نام فرآیند درمانی')),
                ('code', models.IntegerField(unique=True)),
                ('description', models.TextField(null=True, verbose_name='توضیحات')),
                ('skills', models.TextField(null=True, verbose_name='مهارت\u200cها')),
                ('is_active', models.BooleanField(default=True)),
                ('classification', models.ManyToManyField(related_name='procedure', to='common.classification')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procedure', to='administration.company')),
                ('cost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_procedure', to='financialhub.cost', verbose_name='هزینه (در واحد پولی)')),
                ('head', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.person')),
                ('nurse', models.ManyToManyField(related_name='procedure_company', to='nursing.nurses')),
                ('physician', models.ManyToManyField(related_name='procedure_company', to='treatment.physician')),
                ('qualification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='treatment.qualification')),
                ('specialty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medical_procedures', to='treatment.specialty', verbose_name='تخصص مرتبط')),
                ('subspecialty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medical_procedure', to='treatment.subspecialty', verbose_name='زیرتخصص مرتبط')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prescribes',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('medication', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('appointment', models.IntegerField()),
                ('dose', models.CharField(max_length=255)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescribes', to='treatment.patient')),
                ('physician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='treatment.physician')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicianSpecialty',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.physician')),
                ('qualification', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='physician_specialty', to='treatment.qualification')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.specialty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicianProcedure',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.physician')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.procedure')),
                ('qualification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='physician_procedure', to='treatment.qualification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicianMedicalCenter',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('credentials', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.document')),
                ('medical_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalcenter')),
                ('physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.physician')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='physician',
            name='medical_center',
            field=models.ManyToManyField(blank=True, related_name='physician', through='treatment.PhysicianMedicalCenter', to='treatment.medicalcenter'),
        ),
        migrations.AddField(
            model_name='physician',
            name='medical_degree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='physicians', to='common.academicrecord'),
        ),
        migrations.AddField(
            model_name='physician',
            name='person',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.person'),
        ),
        migrations.AddField(
            model_name='physician',
            name='procedure',
            field=models.ManyToManyField(related_name='Physician', through='treatment.PhysicianProcedure', to='treatment.procedure'),
        ),
        migrations.AddField(
            model_name='physician',
            name='qualification',
            field=models.ManyToManyField(related_name='physician', to='treatment.qualification'),
        ),
        migrations.AddField(
            model_name='physician',
            name='specialties',
            field=models.ManyToManyField(through='treatment.PhysicianSpecialty', to='treatment.specialty'),
        ),
        migrations.AddField(
            model_name='physician',
            name='subspecialty',
            field=models.ManyToManyField(blank=True, related_name='physicain', to='treatment.subspecialty'),
        ),
        migrations.AddField(
            model_name='physician',
            name='trained_in',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='physician_trained_in', to='treatment.trainedin'),
        ),
        migrations.CreateModel(
            name='ParaClinic',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=255, null=True, verbose_name='نام پاراکلینیک')),
                ('healthCenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paraClinic', to='treatment.medicalcenter')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.location')),
                ('specialties', models.ManyToManyField(related_name='para_clinic', to='treatment.specialty')),
            ],
            options={
                'verbose_name': 'پاراکلینیک',
                'verbose_name_plural': 'پاراکلینیک\u200cها',
            },
        ),
        migrations.CreateModel(
            name='OveralMedication',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=50)),
                ('frequency', models.CharField(max_length=50)),
                ('medical_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalplan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='تاریخ ثبت سفارش')),
                ('appointment_date', models.DateTimeField(null=True, verbose_name='تاریخ و زمان ملاقات')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='مجموع هزینه')),
                ('is_paid', models.BooleanField(default=False, null=True, verbose_name='پرداخت شده؟')),
                ('status', models.CharField(max_length=50, null=True)),
                ('cost', models.ManyToManyField(related_name='treatment_order', to='financialhub.cost')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='treatment.customer')),
                ('medical_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='treatment.medicalcenter', verbose_name='مرکز درمانی')),
                ('physician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='treatment.physician', verbose_name='پزشک')),
                ('sell_representation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='treatment.sellrepresentation', verbose_name='نماینده فروش')),
                ('treatment_packages', models.ManyToManyField(blank=True, related_name='order', to='treatment.treatmentpackage', verbose_name='درمان')),
            ],
            options={
                'verbose_name': 'سفارش',
                'verbose_name_plural': 'سفارش\u200cها',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='OfficePhysicianAvailability',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_available', models.BooleanField()),
                ('reason_of_unavailability', models.TextField()),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='office_availability', to='treatment.office')),
                ('schedule', models.ManyToManyField(related_name='treatment_office_physician_availability', to='common.schedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='office',
            name='physician',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='office', to='treatment.physician'),
        ),
        migrations.AddField(
            model_name='office',
            name='specialty',
            field=models.ManyToManyField(related_name='office_specialty', to='treatment.specialty'),
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('status_history', models.TextField(blank=True, null=True)),
                ('admission_date', models.DateTimeField()),
                ('discharge_date', models.DateTimeField(blank=True, null=True)),
                ('diagnosis', models.TextField()),
                ('content', models.TextField()),
                ('attending_physician', models.ManyToManyField(related_name='medical_records', to='treatment.physician')),
                ('medical_center', models.ManyToManyField(blank=True, to='treatment.medicalcenter')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.patient')),
                ('prescribed_medications', models.ManyToManyField(to='treatment.overalmedication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='medicalplan',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medical_plan', to='treatment.patient'),
        ),
        migrations.AddField(
            model_name='medicalplan',
            name='schedule',
            field=models.ManyToManyField(related_name='treatment_medical_plan', to='common.schedule'),
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('details', models.TextField(verbose_name='Details')),
                ('treatment_year', models.PositiveIntegerField(verbose_name='Treatment Year')),
                ('document', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.document')),
                ('medical_center', models.ManyToManyField(related_name='medical_history', to='treatment.medicalcenter', verbose_name='Medical Center')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.person', verbose_name='Customer')),
                ('physician', models.ManyToManyField(related_name='medical_history', to='treatment.physician', verbose_name='Physician')),
                ('treatment_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.treatmentpackage', verbose_name='Treatment Package')),
            ],
            options={
                'verbose_name': 'Medical History',
                'verbose_name_plural': 'Medical Histories',
            },
        ),
        migrations.CreateModel(
            name='MedicalCenterUnitSchedule',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_open', models.BooleanField(default=True, verbose_name='Is Open')),
                ('medical_center_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalcenterunit')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.schedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalCenterUnitMedicalCenterSpecialty',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('rating', models.IntegerField(default=0, verbose_name='Rating')),
                ('classification', models.CharField(blank=True, max_length=100, null=True, verbose_name='Classification')),
                ('medical_center_unit_medical_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalcenterunitmedicalcenter')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.specialty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='medicalcenterunitmedicalcenter',
            name='specialty',
            field=models.ManyToManyField(through='treatment.MedicalCenterUnitMedicalCenterSpecialty', to='treatment.specialty', verbose_name='Specialty'),
        ),
        migrations.AddField(
            model_name='medicalcenterunit',
            name='head',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='treatment.physician'),
        ),
        migrations.AddField(
            model_name='medicalcenterunit',
            name='medical_center',
            field=models.ManyToManyField(through='treatment.MedicalCenterUnitMedicalCenter', to='treatment.medicalcenter', verbose_name='Medical Center'),
        ),
        migrations.AddField(
            model_name='medicalcenterunit',
            name='nurses',
            field=models.ManyToManyField(related_name='medical_center_unit', to='nursing.nurses'),
        ),
        migrations.AddField(
            model_name='medicalcenterunit',
            name='physician',
            field=models.ManyToManyField(related_name='medical_center_unit', to='treatment.physician'),
        ),
        migrations.AddField(
            model_name='medicalcenterunit',
            name='schedule',
            field=models.ManyToManyField(through='treatment.MedicalCenterUnitSchedule', to='common.schedule'),
        ),
        migrations.CreateModel(
            name='MedicalCenterSpecialty',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('credentials', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.document')),
                ('medical_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='throught_medical_center_specialty', to='treatment.medicalcenter')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_center_specialty', to='treatment.specialty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalCenterSchedule',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('cost_coefficient', models.DecimalField(decimal_places=2, default=1.0, max_digits=5, verbose_name='Cost Coefficient')),
                ('medical_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='throught_medical_center_schedule', to='treatment.medicalcenter')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_center_schedule', to='common.schedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalCenterPerson',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('evidence', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.document')),
                ('medical_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='throught_medical_center_person', to='treatment.medicalcenter')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_center_person', to='common.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='medicalcenter',
            name='managers',
            field=models.ManyToManyField(blank=True, related_name='medical_center_managers', through='treatment.MedicalCenterPerson', to='common.person'),
        ),
        migrations.AddField(
            model_name='medicalcenter',
            name='schedule',
            field=models.ManyToManyField(related_name='medical_center', through='treatment.MedicalCenterSchedule', to='common.schedule'),
        ),
        migrations.AddField(
            model_name='medicalcenter',
            name='specialties',
            field=models.ManyToManyField(blank=True, related_name='medical_center', through='treatment.MedicalCenterSpecialty', to='treatment.specialty'),
        ),
        migrations.CreateModel(
            name='HospitalAffiliation',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('Physician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hospital_affiliation', to='treatment.physician')),
                ('medical_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hospital_affiliation', to='treatment.medicalcenter')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=255, null=True, verbose_name='نام بیمارستان')),
                ('healthCenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital', to='treatment.medicalcenter')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.location')),
                ('specialties', models.ManyToManyField(to='treatment.specialty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerMedicalHistory',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.customer')),
                ('medical_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='treatment.medicalhistory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='medical_history',
            field=models.ManyToManyField(related_name='customer', through='treatment.CustomerMedicalHistory', to='treatment.medicalhistory'),
        ),
        migrations.AddField(
            model_name='customer',
            name='person',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_patient', to='common.person'),
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=255, null=True, verbose_name='نام کلینیک')),
                ('healthCenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic', to='treatment.medicalcenter')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.location')),
                ('specialties', models.ManyToManyField(related_name='clinic', to='treatment.specialty')),
            ],
            options={
                'verbose_name': 'کلینیک',
                'verbose_name_plural': 'کلینیک\u200cها',
            },
        ),
        migrations.AddField(
            model_name='block',
            name='medical_center',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='block', to='treatment.medicalcenter'),
        ),
        migrations.AddField(
            model_name='block',
            name='medical_center_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='block', to='treatment.medicalcenterunit'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='appointment_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment', to='treatment.appointmentstatus'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='examination_room',
            field=models.ManyToManyField(blank=True, related_name='treatment_appointment', to='treatment.medicalcenterunit'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='medical_center',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='treatment.medicalcenter'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='treatment.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='physician',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment', to='treatment.physician'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='prep_nurse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nursing.nurses'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='probable_start_time',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment_probable_start_time', to='common.schedule'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='translator',
            field=models.ManyToManyField(blank=True, related_name='appointment', to='treatment.translator'),
        ),
        migrations.CreateModel(
            name='AffiliatedWith',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('primaryaffiliation', models.BooleanField()),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affiliated_with', to='treatment.medicalcenterunit')),
                ('medical_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affiliated_with', to='treatment.medicalcenter')),
                ('physician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affiliated_with', to='treatment.physician')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
